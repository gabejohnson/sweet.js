"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.operatorLt = operatorLt;
exports.getOperatorPrec = getOperatorPrec;
exports.getOperatorAssoc = getOperatorAssoc;
exports.isUnaryOperator = isUnaryOperator;
exports.isOperator = isOperator;
var unaryOperators_429 = { "+": true, "-": true, "!": true, "~": true, "++": true, "--": true, typeof: true, void: true, delete: true };
var binaryOperatorPrecedence_430 = { "*": 13, "/": 13, "%": 13, "+": 12, "-": 12, ">>": 11, "<<": 11, ">>>": 11, "<": 10, "<=": 10, ">": 10, ">=": 10, in: 10, instanceof: 10, "==": 9, "!=": 9, "===": 9, "!==": 9, "&": 8, "^": 7, "|": 6, "&&": 5, "||": 4 };
var operatorAssoc_431 = { "*": "left", "/": "left", "%": "left", "+": "left", "-": "left", ">>": "left", "<<": "left", ">>>": "left", "<": "left", "<=": "left", ">": "left", ">=": "left", in: "left", instanceof: "left", "==": "left", "!=": "left", "===": "left", "!==": "left", "&": "left", "^": "left", "|": "left", "&&": "left", "||": "left" };
function operatorLt(left_432, right_433, assoc_434) {
  if (assoc_434 === "left") {
    return left_432 < right_433;
  } else {
    return left_432 <= right_433;
  }
}
function getOperatorPrec(op_435) {
  return binaryOperatorPrecedence_430[op_435];
}
function getOperatorAssoc(op_436) {
  return operatorAssoc_431[op_436];
}
function isUnaryOperator(op_437) {
  return (op_437.isPunctuator() || op_437.isIdentifier() || op_437.isKeyword()) && unaryOperators_429.hasOwnProperty(op_437.val());
}
function isOperator(op_438) {
  if (op_438.isPunctuator() || op_438.isIdentifier() || op_438.isKeyword()) {
    return binaryOperatorPrecedence_430.hasOwnProperty(op_438) || unaryOperators_429.hasOwnProperty(op_438.val());
  }
  return false;
}
//# sourceMappingURL=data:application/json;base64,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IiwiZmlsZSI6Im9wZXJhdG9ycy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHVuYXJ5T3BlcmF0b3JzXzQyOSA9IHtcIitcIjogdHJ1ZSwgXCItXCI6IHRydWUsIFwiIVwiOiB0cnVlLCBcIn5cIjogdHJ1ZSwgXCIrK1wiOiB0cnVlLCBcIi0tXCI6IHRydWUsIHR5cGVvZjogdHJ1ZSwgdm9pZDogdHJ1ZSwgZGVsZXRlOiB0cnVlfTtcbmNvbnN0IGJpbmFyeU9wZXJhdG9yUHJlY2VkZW5jZV80MzAgPSB7XCIqXCI6IDEzLCBcIi9cIjogMTMsIFwiJVwiOiAxMywgXCIrXCI6IDEyLCBcIi1cIjogMTIsIFwiPj5cIjogMTEsIFwiPDxcIjogMTEsIFwiPj4+XCI6IDExLCBcIjxcIjogMTAsIFwiPD1cIjogMTAsIFwiPlwiOiAxMCwgXCI+PVwiOiAxMCwgaW46IDEwLCBpbnN0YW5jZW9mOiAxMCwgXCI9PVwiOiA5LCBcIiE9XCI6IDksIFwiPT09XCI6IDksIFwiIT09XCI6IDksIFwiJlwiOiA4LCBcIl5cIjogNywgXCJ8XCI6IDYsIFwiJiZcIjogNSwgXCJ8fFwiOiA0fTtcbnZhciBvcGVyYXRvckFzc29jXzQzMSA9IHtcIipcIjogXCJsZWZ0XCIsIFwiL1wiOiBcImxlZnRcIiwgXCIlXCI6IFwibGVmdFwiLCBcIitcIjogXCJsZWZ0XCIsIFwiLVwiOiBcImxlZnRcIiwgXCI+PlwiOiBcImxlZnRcIiwgXCI8PFwiOiBcImxlZnRcIiwgXCI+Pj5cIjogXCJsZWZ0XCIsIFwiPFwiOiBcImxlZnRcIiwgXCI8PVwiOiBcImxlZnRcIiwgXCI+XCI6IFwibGVmdFwiLCBcIj49XCI6IFwibGVmdFwiLCBpbjogXCJsZWZ0XCIsIGluc3RhbmNlb2Y6IFwibGVmdFwiLCBcIj09XCI6IFwibGVmdFwiLCBcIiE9XCI6IFwibGVmdFwiLCBcIj09PVwiOiBcImxlZnRcIiwgXCIhPT1cIjogXCJsZWZ0XCIsIFwiJlwiOiBcImxlZnRcIiwgXCJeXCI6IFwibGVmdFwiLCBcInxcIjogXCJsZWZ0XCIsIFwiJiZcIjogXCJsZWZ0XCIsIFwifHxcIjogXCJsZWZ0XCJ9O1xuZXhwb3J0IGZ1bmN0aW9uIG9wZXJhdG9yTHQobGVmdF80MzIsIHJpZ2h0XzQzMywgYXNzb2NfNDM0KSB7XG4gIGlmIChhc3NvY180MzQgPT09IFwibGVmdFwiKSB7XG4gICAgcmV0dXJuIGxlZnRfNDMyIDwgcmlnaHRfNDMzO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBsZWZ0XzQzMiA8PSByaWdodF80MzM7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRPcGVyYXRvclByZWMob3BfNDM1KSB7XG4gIHJldHVybiBiaW5hcnlPcGVyYXRvclByZWNlZGVuY2VfNDMwW29wXzQzNV07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0T3BlcmF0b3JBc3NvYyhvcF80MzYpIHtcbiAgcmV0dXJuIG9wZXJhdG9yQXNzb2NfNDMxW29wXzQzNl07XG59XG5leHBvcnQgZnVuY3Rpb24gaXNVbmFyeU9wZXJhdG9yKG9wXzQzNykge1xuICByZXR1cm4gKG9wXzQzNy5pc1B1bmN0dWF0b3IoKSB8fCBvcF80MzcuaXNJZGVudGlmaWVyKCkgfHwgb3BfNDM3LmlzS2V5d29yZCgpKSAmJiB1bmFyeU9wZXJhdG9yc180MjkuaGFzT3duUHJvcGVydHkob3BfNDM3LnZhbCgpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc09wZXJhdG9yKG9wXzQzOCkge1xuICBpZiAob3BfNDM4LmlzUHVuY3R1YXRvcigpIHx8IG9wXzQzOC5pc0lkZW50aWZpZXIoKSB8fCBvcF80MzguaXNLZXl3b3JkKCkpIHtcbiAgICByZXR1cm4gYmluYXJ5T3BlcmF0b3JQcmVjZWRlbmNlXzQzMC5oYXNPd25Qcm9wZXJ0eShvcF80MzgpIHx8IHVuYXJ5T3BlcmF0b3JzXzQyOS5oYXNPd25Qcm9wZXJ0eShvcF80MzgudmFsKCkpO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbiJdfQ==