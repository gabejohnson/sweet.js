"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.processTemplate = processTemplate;
exports.replaceTemplate = replaceTemplate;

var _immutable = require("immutable");

var _ramdaFantasy = require("ramda-fantasy");

var _ramda = require("ramda");

var _ramda2 = _interopRequireDefault(_ramda);

var _syntax = require("./syntax");

var _syntax2 = _interopRequireDefault(_syntax);

var _errors = require("./errors");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isDolar_745 = function isDolar_745(s_753) {
  return s_753 && s_753 instanceof _syntax2.default && s_753.isIdentifier() && s_753.val() === "$";
};
var isDelimiter_746 = function isDelimiter_746(s_754) {
  return s_754 && typeof s_754.isDelimiter === "function" && s_754.isDelimiter();
};
var isBraces_747 = function isBraces_747(s_755) {
  return s_755 && typeof s_755.isBraces === "function" && s_755.isBraces();
};
var isParens_748 = function isParens_748(s_756) {
  return s_756 && typeof s_756.isParens === "function" && s_756.isParens();
};
var isBrackets_749 = function isBrackets_749(s_757) {
  return s_757 && typeof s_757.isBrackets === "function" && s_757.isBrackets();
};
var insertIntoDelimiter_750 = _ramda2.default.cond([[isBraces_747, function (s_758, r_759) {
  return _syntax2.default.fromBraces(r_759, s_758);
}], [isParens_748, function (s_760, r_761) {
  return _syntax2.default.fromParens(r_761, s_760);
}], [isBrackets_749, function (s_762, r_763) {
  return _syntax2.default.fromBrackets(r_763, s_762);
}]]);
var process_751 = function process_751(acc_764, s_765) {
  if (isBraces_747(s_765) && isDolar_745(acc_764.template.last())) {
    return { template: acc_764.template.push(_syntax2.default.fromBraces(_immutable.List.of(_syntax2.default.fromNumber(acc_764.interp.size)), s_765)), interp: acc_764.interp.push(s_765.inner()) };
  } else if (isDelimiter_746(s_765)) {
    var innerResult = processTemplate(s_765.inner(), acc_764.interp);
    return { template: acc_764.template.push(insertIntoDelimiter_750(s_765, innerResult.template)), interp: innerResult.interp };
  } else {
    return { template: acc_764.template.push(s_765), interp: acc_764.interp };
  }
};
var replace_752 = function replace_752(acc_766, s_767) {
  if (isBraces_747(s_767) && isDolar_745(acc_766.template.last())) {
    var index = s_767.inner().first().val();
    (0, _errors.assert)(acc_766.rep.size > index, "unknown replacement value");
    return { template: acc_766.template.pop().concat(acc_766.rep.get(index)), rep: acc_766.rep };
  } else if (isDelimiter_746(s_767)) {
    var innerResult = replaceTemplate(s_767.inner(), acc_766.rep);
    return { template: acc_766.template.push(insertIntoDelimiter_750(s_767, innerResult)), rep: acc_766.rep };
  } else {
    return { template: acc_766.template.push(s_767), rep: acc_766.rep };
  }
};
function processTemplate(temp_768) {
  var interp_769 = arguments.length <= 1 || arguments[1] === undefined ? (0, _immutable.List)() : arguments[1];

  return temp_768.reduce(process_751, { template: (0, _immutable.List)(), interp: interp_769 });
}
function replaceTemplate(temp_770, rep_771) {
  return temp_770.reduce(replace_752, { template: (0, _immutable.List)(), rep: rep_771 }).template;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3N3ZWV0L3RlbXBsYXRlLXByb2Nlc3Nvci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztRQWlDZ0IsZSxHQUFBLGU7UUFHQSxlLEdBQUEsZTs7QUFwQ2hCOztBQUNBOztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBLElBQU0sY0FBYyxTQUFkLFdBQWM7QUFBQSxTQUFTLFNBQVMsaUNBQVQsSUFBb0MsTUFBTSxZQUFOLEVBQXBDLElBQTRELE1BQU0sR0FBTixPQUFnQixHQUFyRjtBQUFBLENBQXBCO0FBQ0EsSUFBTSxrQkFBa0IsU0FBbEIsZUFBa0I7QUFBQSxTQUFTLFNBQVMsT0FBTyxNQUFNLFdBQWIsS0FBNkIsVUFBdEMsSUFBb0QsTUFBTSxXQUFOLEVBQTdEO0FBQUEsQ0FBeEI7QUFDQSxJQUFNLGVBQWUsU0FBZixZQUFlO0FBQUEsU0FBUyxTQUFTLE9BQU8sTUFBTSxRQUFiLEtBQTBCLFVBQW5DLElBQWlELE1BQU0sUUFBTixFQUExRDtBQUFBLENBQXJCO0FBQ0EsSUFBTSxlQUFlLFNBQWYsWUFBZTtBQUFBLFNBQVMsU0FBUyxPQUFPLE1BQU0sUUFBYixLQUEwQixVQUFuQyxJQUFpRCxNQUFNLFFBQU4sRUFBMUQ7QUFBQSxDQUFyQjtBQUNBLElBQU0saUJBQWlCLFNBQWpCLGNBQWlCO0FBQUEsU0FBUyxTQUFTLE9BQU8sTUFBTSxVQUFiLEtBQTRCLFVBQXJDLElBQW1ELE1BQU0sVUFBTixFQUE1RDtBQUFBLENBQXZCO0FBQ0EsSUFBTSwwQkFBMEIsZ0JBQUUsSUFBRixDQUFPLENBQUMsQ0FBQyxZQUFELEVBQWUsVUFBQyxLQUFELEVBQVEsS0FBUjtBQUFBLFNBQWtCLGlCQUFPLFVBQVAsQ0FBa0IsS0FBbEIsRUFBeUIsS0FBekIsQ0FBbEI7QUFBQSxDQUFmLENBQUQsRUFBb0UsQ0FBQyxZQUFELEVBQWUsVUFBQyxLQUFELEVBQVEsS0FBUjtBQUFBLFNBQWtCLGlCQUFPLFVBQVAsQ0FBa0IsS0FBbEIsRUFBeUIsS0FBekIsQ0FB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QUNEIiwiZmlsZSI6InRlbXBsYXRlLXByb2Nlc3Nvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TGlzdH0gZnJvbSBcImltbXV0YWJsZVwiO1xuaW1wb3J0IHtNYXliZX0gZnJvbSBcInJhbWRhLWZhbnRhc3lcIjtcbmltcG9ydCBfIGZyb20gXCJyYW1kYVwiO1xuaW1wb3J0IFN5bnRheCBmcm9tIFwiLi9zeW50YXhcIjtcbmltcG9ydCB7YXNzZXJ0fSBmcm9tIFwiLi9lcnJvcnNcIjtcbmNvbnN0IGlzRG9sYXJfNzQ1ID0gc183NTMgPT4gc183NTMgJiYgc183NTMgaW5zdGFuY2VvZiBTeW50YXggJiYgc183NTMuaXNJZGVudGlmaWVyKCkgJiYgc183NTMudmFsKCkgPT09IFwiJFwiO1xuY29uc3QgaXNEZWxpbWl0ZXJfNzQ2ID0gc183NTQgPT4gc183NTQgJiYgdHlwZW9mIHNfNzU0LmlzRGVsaW1pdGVyID09PSBcImZ1bmN0aW9uXCIgJiYgc183NTQuaXNEZWxpbWl0ZXIoKTtcbmNvbnN0IGlzQnJhY2VzXzc0NyA9IHNfNzU1ID0+IHNfNzU1ICYmIHR5cGVvZiBzXzc1NS5pc0JyYWNlcyA9PT0gXCJmdW5jdGlvblwiICYmIHNfNzU1LmlzQnJhY2VzKCk7XG5jb25zdCBpc1BhcmVuc183NDggPSBzXzc1NiA9PiBzXzc1NiAmJiB0eXBlb2Ygc183NTYuaXNQYXJlbnMgPT09IFwiZnVuY3Rpb25cIiAmJiBzXzc1Ni5pc1BhcmVucygpO1xuY29uc3QgaXNCcmFja2V0c183NDkgPSBzXzc1NyA9PiBzXzc1NyAmJiB0eXBlb2Ygc183NTcuaXNCcmFja2V0cyA9PT0gXCJmdW5jdGlvblwiICYmIHNfNzU3LmlzQnJhY2tldHMoKTtcbmNvbnN0IGluc2VydEludG9EZWxpbWl0ZXJfNzUwID0gXy5jb25kKFtbaXNCcmFjZXNfNzQ3LCAoc183NTgsIHJfNzU5KSA9PiBTeW50YXguZnJvbUJyYWNlcyhyXzc1OSwgc183NTgpXSwgW2lzUGFyZW5zXzc0OCwgKHNfNzYwLCByXzc2MSkgPT4gU3ludGF4LmZyb21QYXJlbnMocl83NjEsIHNfNzYwKV0sIFtpc0JyYWNrZXRzXzc0OSwgKHNfNzYyLCByXzc2MykgPT4gU3ludGF4LmZyb21CcmFja2V0cyhyXzc2Mywgc183NjIpXV0pO1xuY29uc3QgcHJvY2Vzc183NTEgPSAoYWNjXzc2NCwgc183NjUpID0+IHtcbiAgaWYgKGlzQnJhY2VzXzc0NyhzXzc2NSkgJiYgaXNEb2xhcl83NDUoYWNjXzc2NC50ZW1wbGF0ZS5sYXN0KCkpKSB7XG4gICAgcmV0dXJuIHt0ZW1wbGF0ZTogYWNjXzc2NC50ZW1wbGF0ZS5wdXNoKFN5bnRheC5mcm9tQnJhY2VzKExpc3Qub2YoU3ludGF4LmZyb21OdW1iZXIoYWNjXzc2NC5pbnRlcnAuc2l6ZSkpLCBzXzc2NSkpLCBpbnRlcnA6IGFjY183NjQuaW50ZXJwLnB1c2goc183NjUuaW5uZXIoKSl9O1xuICB9IGVsc2UgaWYgKGlzRGVsaW1pdGVyXzc0NihzXzc2NSkpIHtcbiAgICBsZXQgaW5uZXJSZXN1bHQgPSBwcm9jZXNzVGVtcGxhdGUoc183NjUuaW5uZXIoKSwgYWNjXzc2NC5pbnRlcnApO1xuICAgIHJldHVybiB7dGVtcGxhdGU6IGFjY183NjQudGVtcGxhdGUucHVzaChpbnNlcnRJbnRvRGVsaW1pdGVyXzc1MChzXzc2NSwgaW5uZXJSZXN1bHQudGVtcGxhdGUpKSwgaW50ZXJwOiBpbm5lclJlc3VsdC5pbnRlcnB9O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7dGVtcGxhdGU6IGFjY183NjQudGVtcGxhdGUucHVzaChzXzc2NSksIGludGVycDogYWNjXzc2NC5pbnRlcnB9O1xuICB9XG59O1xuY29uc3QgcmVwbGFjZV83NTIgPSAoYWNjXzc2Niwgc183NjcpID0+IHtcbiAgaWYgKGlzQnJhY2VzXzc0NyhzXzc2NykgJiYgaXNEb2xhcl83NDUoYWNjXzc2Ni50ZW1wbGF0ZS5sYXN0KCkpKSB7XG4gICAgbGV0IGluZGV4ID0gc183NjcuaW5uZXIoKS5maXJzdCgpLnZhbCgpO1xuICAgIGFzc2VydChhY2NfNzY2LnJlcC5zaXplID4gaW5kZXgsIFwidW5rbm93biByZXBsYWNlbWVudCB2YWx1ZVwiKTtcbiAgICByZXR1cm4ge3RlbXBsYXRlOiBhY2NfNzY2LnRlbXBsYXRlLnBvcCgpLmNvbmNhdChhY2NfNzY2LnJlcC5nZXQoaW5kZXgpKSwgcmVwOiBhY2NfNzY2LnJlcH07XG4gIH0gZWxzZSBpZiAoaXNEZWxpbWl0ZXJfNzQ2KHNfNzY3KSkge1xuICAgIGxldCBpbm5lclJlc3VsdCA9IHJlcGxhY2VUZW1wbGF0ZShzXzc2Ny5pbm5lcigpLCBhY2NfNzY2LnJlcCk7XG4gICAgcmV0dXJuIHt0ZW1wbGF0ZTogYWNjXzc2Ni50ZW1wbGF0ZS5wdXNoKGluc2VydEludG9EZWxpbWl0ZXJfNzUwKHNfNzY3LCBpbm5lclJlc3VsdCkpLCByZXA6IGFjY183NjYucmVwfTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4ge3RlbXBsYXRlOiBhY2NfNzY2LnRlbXBsYXRlLnB1c2goc183NjcpLCByZXA6IGFjY183NjYucmVwfTtcbiAgfVxufTtcbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzVGVtcGxhdGUodGVtcF83NjgsIGludGVycF83NjkgPSBMaXN0KCkpIHtcbiAgcmV0dXJuIHRlbXBfNzY4LnJlZHVjZShwcm9jZXNzXzc1MSwge3RlbXBsYXRlOiBMaXN0KCksIGludGVycDogaW50ZXJwXzc2OX0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlcGxhY2VUZW1wbGF0ZSh0ZW1wXzc3MCwgcmVwXzc3MSkge1xuICByZXR1cm4gdGVtcF83NzAucmVkdWNlKHJlcGxhY2VfNzUyLCB7dGVtcGxhdGU6IExpc3QoKSwgcmVwOiByZXBfNzcxfSkudGVtcGxhdGU7XG59XG4iXX0=