"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.collectBindings = exports.CollectBindingSyntax = undefined;

var _symbol = require("./symbol");

var _transforms = require("./transforms");

var _errors = require("./errors");

var _terms = require("./terms");

var _terms2 = _interopRequireDefault(_terms);

var _immutable = require("immutable");

var _astDispatcher = require("./ast-dispatcher");

var _astDispatcher2 = _interopRequireDefault(_astDispatcher);

var _ramda = require("ramda");

var _ = _interopRequireWildcard(_ramda);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class CollectBindingSyntax_326 extends _astDispatcher2.default {
  constructor() {
    super("collect", true);
    this.names = (0, _immutable.List)();
  }
  collect(term_328) {
    return this.dispatch(term_328);
  }
  collectBindingIdentifier(term_329) {
    return this.names.concat(term_329.name);
  }
  collectBindingPropertyIdentifier(term_330) {
    return this.collect(term_330.binding);
  }
  collectBindingPropertyProperty(term_331) {
    return this.collect(term_331.binding);
  }
  collectArrayBinding(term_332) {
    let restElement_333 = null;
    if (term_332.restElement != null) {
      restElement_333 = this.collect(term_332.restElement);
    }
    return this.names.concat(restElement_333).concat(term_332.elements.filter(el_334 => el_334 != null).flatMap(el_335 => this.collect(el_335)));
  }
  collectObjectBinding(term_336) {
    return (0, _immutable.List)();
  }
}
function collectBindings_327(term_337) {
  return new CollectBindingSyntax_326().collect(term_337);
}
exports.CollectBindingSyntax = CollectBindingSyntax_326;
exports.collectBindings = collectBindings_327;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3N3ZWV0L2h5Z2llbmUtdXRpbHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7SUFBYSxDOzs7Ozs7QUFDYixNQUFNLHdCQUFOLGlDQUFxRDtBQUNuRCxnQkFBYztBQUNaLFVBQU0sU0FBTixFQUFpQixJQUFqQjtBQUNBLFNBQUssS0FBTCxHQUFhLHNCQUFiO0FBQ0Q7QUFDRCxVQUFRLFFBQVIsRUFBa0I7QUFDaEIsV0FBTyxLQUFLLFFBQUwsQ0FBYyxRQUFkLENBQVA7QUFDRDtBQUNELDJCQUF5QixRQUF6QixFQUFtQztBQUNqQyxXQUFPLEtBQUssS0FBTCxDQUFXLE1BQVgsQ0FBa0IsU0FBUyxJQUEzQixDQUFQO0FBQ0Q7QUFDRCxtQ0FBaUMsUUFBakMsRUFBMkM7QUFDekMsV0FBTyxLQUFLLE9BQUwsQ0FBYSxTQUFTLE9BQXRCLENBQVA7QUFDRDtBQUNELGlDQUErQixRQUEvQixFQUF5QztBQUN2QyxXQUFPLEtBQUssT0FBTCxDQUFhLFNBQVMsT0FBdEIsQ0FBUDtBQUNEO0FBQ0Qsc0JBQW9CLFFBQXBCLEVBQThCO0FBQzVCLFFBQUksa0JBQWtCLElBQXRCO0FBQ0EsUUFBSSxTQUFTLFdBQVQsSUFBd0IsSUFBNUIsRUFBa0M7QUFDaEMsd0JBQWtCLEtBQUssT0FBTCxDQUFhLFNBQVMsV0FBdEIsQ0FBbEI7QUFDRDtBQUNELFdBQU8sS0FBSyxLQUFMLENBQVcsTUFBWCxDQUFrQixlQUFsQixFQUFtQyxNQUFuQyxDQUEwQyxTQUFTLFFBQVQsQ0FBa0IsTUFBbEIsQ0FBeUIsVUFBVSxVQUFVLElBQTdDLEVBQW1ELE9BQW5ELENBQTJELFVBQVUsS0FBSyxPQUFMLENBQWEsTUFBYixDQUFyRSxDQUExQyxDQUFQO0FBQ0Q7QUFDRCx1QkFBcUIsUUFBckIsRUFBK0I7QUFDN0IsV0FBTyxzQkFBUDtBQUNEO0FBMUJrRDtBQTRCckQsU0FBUyxtQkFBVCxDQUE2QixRQUE3QixFQUF1QztBQUNyQyxTQUFRLElBQUksd0JBQUosRUFBRCxDQUErQixPQUEvQixDQUF1QyxRQUF2QyxDQUFQO0FBQ0Q7UUFDbUMsb0IsR0FBNUIsd0I7UUFDdUIsZSxHQUF2QixtQiIsImZpbGUiOiJoeWdpZW5lLXV0aWxzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnZW5zeW19IGZyb20gXCIuL3N5bWJvbFwiO1xuaW1wb3J0IHtWYXJCaW5kaW5nVHJhbnNmb3JtLCBDb21waWxldGltZVRyYW5zZm9ybX0gZnJvbSBcIi4vdHJhbnNmb3Jtc1wiO1xuaW1wb3J0IHtleHBlY3QsIGFzc2VydH0gZnJvbSBcIi4vZXJyb3JzXCI7XG5pbXBvcnQgVGVybSwge2lzRU9GLCBpc0JpbmRpbmdJZGVudGlmaWVyLCBpc0JpbmRpbmdQcm9wZXJ0eVByb3BlcnR5LCBpc0JpbmRpbmdQcm9wZXJ0eUlkZW50aWZpZXIsIGlzT2JqZWN0QmluZGluZywgaXNBcnJheUJpbmRpbmcsIGlzRnVuY3Rpb25EZWNsYXJhdGlvbiwgaXNGdW5jdGlvbkV4cHJlc3Npb24sIGlzRnVuY3Rpb25UZXJtLCBpc0Z1bmN0aW9uV2l0aE5hbWUsIGlzU3ludGF4RGVjbGFyYXRpb24sIGlzU3ludGF4cmVjRGVjbGFyYXRpb24sIGlzVmFyaWFibGVEZWNsYXJhdGlvbiwgaXNWYXJpYWJsZURlY2xhcmF0aW9uU3RhdGVtZW50LCBpc0ltcG9ydCwgaXNFeHBvcnQsIGlzUHJhZ21hLCBpc0V4cG9ydFN5bnRheH0gZnJvbSBcIi4vdGVybXNcIjtcbmltcG9ydCB7TGlzdH0gZnJvbSBcImltbXV0YWJsZVwiO1xuaW1wb3J0IEFTVERpc3BhdGNoZXIgZnJvbSBcIi4vYXN0LWRpc3BhdGNoZXJcIjtcbmltcG9ydCAgKiBhcyBfIGZyb20gXCJyYW1kYVwiO1xuY2xhc3MgQ29sbGVjdEJpbmRpbmdTeW50YXhfMzI2IGV4dGVuZHMgQVNURGlzcGF0Y2hlciB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKFwiY29sbGVjdFwiLCB0cnVlKTtcbiAgICB0aGlzLm5hbWVzID0gTGlzdCgpO1xuICB9XG4gIGNvbGxlY3QodGVybV8zMjgpIHtcbiAgICByZXR1cm4gdGhpcy5kaXNwYXRjaCh0ZXJtXzMyOCk7XG4gIH1cbiAgY29sbGVjdEJpbmRpbmdJZGVudGlmaWVyKHRlcm1fMzI5KSB7XG4gICAgcmV0dXJuIHRoaXMubmFtZXMuY29uY2F0KHRlcm1fMzI5Lm5hbWUpO1xuICB9XG4gIGNvbGxlY3RCaW5kaW5nUHJvcGVydHlJZGVudGlmaWVyKHRlcm1fMzMwKSB7XG4gICAgcmV0dXJuIHRoaXMuY29sbGVjdCh0ZXJtXzMzMC5iaW5kaW5nKTtcbiAgfVxuICBjb2xsZWN0QmluZGluZ1Byb3BlcnR5UHJvcGVydHkodGVybV8zMzEpIHtcbiAgICByZXR1cm4gdGhpcy5jb2xsZWN0KHRlcm1fMzMxLmJpbmRpbmcpO1xuICB9XG4gIGNvbGxlY3RBcnJheUJpbmRpbmcodGVybV8zMzIpIHtcbiAgICBsZXQgcmVzdEVsZW1lbnRfMzMzID0gbnVsbDtcbiAgICBpZiAodGVybV8zMzIucmVzdEVsZW1lbnQgIT0gbnVsbCkge1xuICAgICAgcmVzdEVsZW1lbnRfMzMzID0gdGhpcy5jb2xsZWN0KHRlcm1fMzMyLnJlc3RFbGVtZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMubmFtZXMuY29uY2F0KHJlc3RFbGVtZW50XzMzMykuY29uY2F0KHRlcm1fMzMyLmVsZW1lbnRzLmZpbHRlcihlbF8zMzQgPT4gZWxfMzM0ICE9IG51bGwpLmZsYXRNYXAoZWxfMzM1ID0+IHRoaXMuY29sbGVjdChlbF8zMzUpKSk7XG4gIH1cbiAgY29sbGVjdE9iamVjdEJpbmRpbmcodGVybV8zMzYpIHtcbiAgICByZXR1cm4gTGlzdCgpO1xuICB9XG59XG5mdW5jdGlvbiBjb2xsZWN0QmluZGluZ3NfMzI3KHRlcm1fMzM3KSB7XG4gIHJldHVybiAobmV3IENvbGxlY3RCaW5kaW5nU3ludGF4XzMyNikuY29sbGVjdCh0ZXJtXzMzNyk7XG59XG5leHBvcnQge0NvbGxlY3RCaW5kaW5nU3ludGF4XzMyNiBhcyBDb2xsZWN0QmluZGluZ1N5bnRheH07XG5leHBvcnQge2NvbGxlY3RCaW5kaW5nc18zMjcgYXMgY29sbGVjdEJpbmRpbmdzfSJdfQ==